GIT Homework 1/2

- mkdir HW_2
- cd HW_2

 1. Создать файл “new.json” 
- touch new.json

 2. Добавить файл под гит. 
- git add new.json

 3. Закоммитить файл. 
- git commit -m "add new.json file"

 4. Отправить файл на внешний GitHub репозиторий. 
- git push

 5. Создать файлы new2.json, new2.xml, new2.txt 
- touch new2.json new2.xml new2.txt

 6. Добавить файлы под гит. 
- git add .

 7. Закоммитить файлы. 
- git commit -m "add new2 .json .xml .txt files"

 8. Отправить файлы на внешний GitHub репозиторий. 
- git push

 9. Отредактировать содержание файла “new2.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата).
- vim new2.txt
- i
Gasanova Ramila Magammedovna
age 29 
cat 1
salary 1000$
- Esc:wq Enter

 10. Отредактировать содержание файла “new2.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
- vim new2.json
- i
{
  "name": "Ramila",
  "age": 29,
  "cat": 1,
  "salary": "1000$"
}
- Esc:wq Enter

 11. Добавить и закоммитить “new2.txt” одной строчкой. 
- git add new2.txt && git commit -m "new2.txt is update"

 12. Добавить и закоммитить “new2.json” одной строчкой. 
- git add new2.json && git commit -m "new2.json is update"

 13. Отправить изменения на внешний репозиторий. 
- git push

 14. Отредактировать содержание файла “new2.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
- vim new2.xml
- i
<?xml version="1.0" encoding="utf-8"?>
<!--about myself-->

<users>
	<name>Gasanova Ramila Magammedovna</name>
	<age>29</age>
	<pets>1cat</pets>
	<salary>1000$</salary>
</users>
- Esc:wq Enter

 15. Добавить и закоммитить “new2.xml” одной строчкой. 
- git add new2.xml && git commit -m "new2.xml is update"

 16. Отправить изменения на внешний репозиторий. 
- git push

 17. Отправить предыдущее домашнее задание по GitBush Terminal на внешний репозиторий.
- cd ..
- mkdir HW_1
- cd HW_1
- переносим  текстовый файл Git_HW_1.txt в папку HW_1
- git add Git_HW_1.txt
- git commit Git_HW_1.txt -m "GHW1.txt commit"
- git push

 18. В веб интерфейсе GitHub создать файл new3.txt.
- выбираем репозиторий Gasancho/group_23/HW_2
- add file new3.txt
- confirm new file

 19. Отредактировать в веб интерфейсе содержание файла “new3.txt” - написать информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить).
- значок "ручка" - редактируем
Любимый фильм - Сплит  
Любимый сериал - Нет 
Любимая еда - Пицца
Любимое время года - Лето
Страна которую хотели бы посетить - Норвегия  

 20. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
- Commit changes

 21. Синхронизировать внешний и локальный репозитории (слить изменения с внешнего репозитория) 
- git pull

 22. Отредактировать в веб интерфейсе содержание файла “new2.json” - добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить). Всё в формате JSON.
- выбираем репозиторий Gasancho/group_23/HW_2
- выбираем new2.json
- значок "ручка" - редактируем
{
  "favorite_film": "Split",
  "favorite_series": "", 
  "favorite_food": "pizza",
  "favorite_season": "summer", 
  "country_visit": "Norway"
}

 23. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
- Commit changes

 24. Синхронизировать внешний и локальный репозитории 
- git pull

 25. Отредактировать в веб интерфейсе содержание файла “new2.xml” - добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить). Всё в формате XML.
- выбираем репозиторий Gasancho/group_23/HW_2
- выбираем new2.xml
- значок "ручка" - редактируем
<hobbies> 
	<film>Split</film>
	<series></series>
	<food>Pizza</food>
	<season>Summer</season>
	<country>Norway</country>
</hobbies>

 26. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
- Commit changes

 27. Синхронизировать внешний и локальный репозитории 
- git pull